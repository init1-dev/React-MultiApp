{"version":3,"sources":["components/08-useReducer/todoReducer.js","components/08-useReducer/TodoListItem.js","components/08-useReducer/TodoList.js","components/08-useReducer/TodoAdd.js","hooks/useForm.js","components/03-examples/QuoteControl.js","hooks/useCounter.js","components/03-examples/MultipleCustomHooks.js","hooks/useFetch.js","components/04-useRef/RealExampleRef.js","components/08-useReducer/TodoApp.js","index.js"],"names":["todoReducer","state","action","type","payload","filter","todo","id","map","done","TodoListItem","index","handleDeleteToDo","handleToggle","desc","className","onClick","TodoList","todos","i","TodoAdd","handleAddTodo","initialState","useState","values","setValues","handleInputChange","target","name","value","useForm","description","reset","onSubmit","e","preventDefault","trim","length","newTodo","Date","getTime","placeholder","autoComplete","onChange","QuoteControl","data","loading","counter","setCounter","increment","decrement","useCounter","author","quote","current","MultipleCustomHooks","url","isMounted","useRef","error","setState","useEffect","fetch","then","res","json","console","log","useFetch","RealExampleRef","show","setShow","init","JSON","parse","localStorage","getItem","TodoApp","useReducer","dispatch","setItem","stringify","todoId","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.d1e558d9.chunk.js","sourcesContent":["\r\nexport const todoReducer = ( state = [], action ) => {\r\n\r\n    switch ( action.type ) {\r\n        case 'add':\r\n            return [ ...state, action.payload ];\r\n\r\n        case 'delete':\r\n            return state.filter( todo => todo.id !== action.payload );\r\n\r\n        case 'toggle':\r\n            return state.map( todo => \r\n                ( todo.id === action.payload )\r\n                    ? { ...todo, done: !todo.done }\r\n                    : todo\r\n            );\r\n    \r\n        default:\r\n            return state;\r\n    };\r\n\r\n};","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nexport const TodoListItem = ({ todo, index, handleDeleteToDo, handleToggle }) => {\r\n    const { id, desc, done } = todo;\r\n    return (\r\n        <li\r\n            key={ id }\r\n            className=\"list-group-item\"\r\n        >\r\n            <p\r\n                className={`${ done && 'complete' }`}\r\n                onClick={ () => handleToggle( id ) }\r\n            >\r\n                { index + 1 }. { desc } [ {done ? 'Done' : 'Pending'} ]\r\n            </p>\r\n            <button\r\n                className=\"btn btn-danger\"\r\n                onClick={ () => handleDeleteToDo( id ) }\r\n            >\r\n                Borrar\r\n            </button>\r\n        </li>\r\n    )\r\n}\r\n\r\nTodoListItem.propTypes = {\r\n    todo: PropTypes.object.isRequired,\r\n    index: PropTypes.number.isRequired,\r\n    handleDeleteToDo: PropTypes.func.isRequired,\r\n    handleToggle: PropTypes.func.isRequired\r\n}","import React from 'react'\r\nimport { TodoListItem } from './TodoListItem';\r\nimport PropTypes from 'prop-types';\r\n\r\nexport const TodoList = ({ todos, handleDeleteToDo, handleToggle }) => {\r\n    return (\r\n        <ul className=\"list-group list-group-flush\">\r\n            {\r\n                todos.map((todo, i) => (\r\n                    // TodoListItem, todo, index, handleDelete, handleToggle\r\n                    <TodoListItem\r\n                        key={ todo.id }\r\n                        todo={ todo }\r\n                        index={ i }\r\n                        handleDeleteToDo={ handleDeleteToDo }\r\n                        handleToggle={ handleToggle }\r\n                    />\r\n                ))\r\n            }\r\n        </ul>\r\n    )\r\n};\r\n\r\nTodoList.propTypes = {\r\n    todos: PropTypes.array.isRequired,\r\n    handleDeleteToDo: PropTypes.func.isRequired,\r\n    handleToggle: PropTypes.func.isRequired\r\n}","import React from 'react';\r\nimport { useForm } from '../../hooks/useForm';\r\n\r\nexport const TodoAdd = ({ handleAddTodo }) => {\r\n\r\n    const [ { description }, handleInputChange, reset ] = useForm({\r\n        description: ''\r\n    });\r\n\r\n    const handleSubmit = (e) => {\r\n\r\n        e.preventDefault();\r\n\r\n        if( description.trim().length < 3 ) {\r\n            return;\r\n        }\r\n\r\n        const newTodo = {\r\n            id: new Date().getTime(),\r\n            desc: description,\r\n            done: false\r\n        };\r\n\r\n        handleAddTodo( newTodo );\r\n        reset();\r\n\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <h4>Agregar ToDo</h4>\r\n            <hr />\r\n\r\n            <form onSubmit={ handleSubmit }>\r\n\r\n                <input\r\n                    type=\"text\"\r\n                    name=\"description\"\r\n                    className=\"form-control\"\r\n                    placeholder=\"Escribe aquÃ­ tu tarea\"\r\n                    autoComplete=\"off\"\r\n                    value={ description }\r\n                    onChange={ handleInputChange }\r\n                />\r\n\r\n                <div className=\"d-grid gap-1\">\r\n                    <button\r\n                        type=\"submit\"\r\n                        className=\"btn btn-outline-primary mt-1\"\r\n                    >\r\n                        Agregar\r\n                    </button>\r\n                </div>\r\n\r\n            </form>\r\n        </>\r\n    )\r\n}\r\n","import { useState } from 'react';\r\n\r\nexport const useForm = ( initialState = {} ) => {\r\n    \r\n    const [values, setValues] = useState(initialState);\r\n\r\n    const reset = () => {\r\n        setValues( initialState );\r\n    }\r\n\r\n    const handleInputChange = ({ target }) => {\r\n        setValues({\r\n            ...values,\r\n            [ target.name ]: target.value\r\n        });\r\n    };\r\n\r\n    return [ values, handleInputChange, reset ];\r\n}\r\n","import React from 'react'\r\nimport { useCounter } from '../../hooks/useCounter';\r\nimport PropTypes from 'prop-types';\r\n\r\nexport const QuoteControl = ({ data, loading, length } ) => {\r\n\r\n    const { counter, setCounter, increment, decrement, reset } = useCounter(0);\r\n    const { author, quote } = (( !loading && data.length > 0 ) && data[ counter ] ) || {};\r\n\r\n    if(data !== null ) {\r\n        counter < 0 && setCounter(length.current - 1);\r\n        counter > length.current - 1 && setCounter(0);\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <h1>&gt;&gt; { length.current || '' } Breaking Bad Quotes [{ counter + 1 }]</h1>\r\n            <hr />\r\n\r\n            { loading &&\r\n                    <div className=\"alert alert-info text-center\">\r\n                        Loading...\r\n                    </div>\r\n            }\r\n\r\n            { !loading &&\r\n                    <>\r\n                        <blockquote className=\"blockquote text-end\">\r\n                            <p className=\"quote\"> { quote } </p>\r\n                            <footer className=\"blockquote-footer\"> { author } </footer>\r\n                        </blockquote>\r\n                        \r\n                        <div className=\"btn-group me-2\">\r\n                            <button\r\n                                className=\"btn btn-primary\"\r\n                                onClick={ () => decrement() }\r\n                            >\r\n                                Anterior\r\n                            </button>\r\n                        </div>\r\n\r\n                        <div className=\"btn-group me-2\">\r\n                            <button\r\n                                className=\"btn btn-primary\"\r\n                                onClick={ () => reset() }\r\n                            >\r\n                                Reset\r\n                            </button>\r\n                        </div>\r\n\r\n                        <div className=\"btn-group me-2\">\r\n                            <button\r\n                                className=\"btn btn-primary\"\r\n                                onClick={ () => increment() }\r\n                            >\r\n                                Siguiente\r\n                            </button>\r\n                        </div>\r\n                    </>\r\n            }\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nQuoteControl.propTypes = {\r\n    data: PropTypes.array,\r\n    loading: PropTypes.bool.isRequired,\r\n    length: PropTypes.object.isRequired\r\n}","import { useState } from 'react';\r\n\r\nexport const useCounter = ( initialState = 10 ) => {\r\n    \r\n    const [ counter, setCounter ] = useState( initialState );\r\n\r\n    const increment = ( factor = 1 ) => {\r\n        setCounter( counter + factor );\r\n    };\r\n\r\n    const decrement = ( factor = 1 ) => {\r\n        setCounter( counter - factor );\r\n    };\r\n\r\n    const reset = () => {\r\n        setCounter( initialState );\r\n    }\r\n\r\n    return {\r\n        counter,\r\n        setCounter,\r\n        increment,\r\n        decrement,\r\n        reset\r\n    };\r\n\r\n};","import React from 'react';\r\nimport { useFetch } from '../../hooks/useFetch';\r\n// import { useCounter } from '../../hooks/useCounter';\r\nimport { QuoteControl } from './QuoteControl';\r\n\r\nexport const MultipleCustomHooks = () => {\r\n\r\n    const { state, length } = useFetch(`https://www.breakingbadapi.com/api/quotes`);\r\n    const { data, loading } = state;\r\n\r\n    return (\r\n        <div className=\"mt-3\">\r\n            <QuoteControl\r\n                data={ data }\r\n                loading={ loading }\r\n                length={ length }\r\n            />\r\n        </div>\r\n    )\r\n}\r\n","import { useEffect, useRef, useState } from 'react';\r\n\r\nexport const useFetch = ( url ) => {\r\n\r\n    const isMounted = useRef(false);\r\n    const [state, setState] = useState({ data: null, loading: true, error: null });\r\n    const length = useRef(0);\r\n\r\n    useEffect(() => {\r\n        isMounted.current = true;\r\n        return () => {\r\n            isMounted.current = false;\r\n        }\r\n    }, []);\r\n\r\n    useEffect( () => {\r\n        \r\n        fetch( url )\r\n            .then( res => res.json() )\r\n            .then( data => {\r\n\r\n                \r\n                if( isMounted.current ) {\r\n                        length.current = data.length;\r\n                        \r\n                        setState({\r\n                            data,\r\n                            loading: false,\r\n                            error: null\r\n                        });\r\n                    } else {\r\n                        console.log('setState no llamado');\r\n                    }\r\n                \r\n            })\r\n\r\n            return () => {\r\n                setState({ data: null, loading: true, error: null });\r\n            };\r\n            \r\n    }, [ url ]);\r\n\r\n    return {\r\n        state,\r\n        length\r\n    };\r\n\r\n};\r\n","import React, { useState } from 'react';\r\nimport { MultipleCustomHooks } from '../03-examples/MultipleCustomHooks';\r\n\r\nexport const RealExampleRef = () => {\r\n\r\n    const [show, setShow] = useState(false);\r\n\r\n    return (\r\n        <div>\r\n            <h1>React-QuotesApp <button\r\n                                    className=\"btn btn-warning ms-3\"\r\n                                    onClick={ () => {\r\n                                        setShow( !show );\r\n                                    }}\r\n                                >\r\n                                    Show/Hide Quotes\r\n                                </button>\r\n            </h1>\r\n\r\n            { show && <MultipleCustomHooks />}\r\n\r\n        </div>\r\n    )\r\n};","import React, { useEffect, useReducer } from 'react'\r\nimport { todoReducer } from './todoReducer';\r\n\r\nimport { TodoList } from './TodoList';\r\nimport { TodoAdd } from './TodoAdd';\r\nimport { RealExampleRef } from '../04-useRef/RealExampleRef';\r\n\r\n\r\nconst init = () => {\r\n    return JSON.parse( localStorage.getItem('todos') ) || [];\r\n};\r\n\r\nexport const TodoApp = () => {\r\n\r\n    const [ todos, dispatch ] = useReducer( todoReducer, [], init );\r\n\r\n    useEffect(() => {\r\n        localStorage.setItem('todos', JSON.stringify( todos ));\r\n    }, [ todos ]);\r\n\r\n    const handleAddTodo = ( newTodo ) => {\r\n        dispatch({\r\n            type: 'add',\r\n            payload: newTodo\r\n        });\r\n    };\r\n\r\n    const handleDeleteToDo = ( todoId ) => {\r\n        dispatch({\r\n            type: 'delete',\r\n            payload: todoId\r\n        });\r\n    };\r\n\r\n    const handleToggle = ( todoId ) => {\r\n        dispatch({\r\n            type: 'toggle',\r\n            payload: todoId\r\n        });\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <h1>TodoApp ( { todos.length } { todos.length === 1 ? 'Nota' : 'Notas'} ) </h1>\r\n            <hr />\r\n            <div className=\"row\">\r\n                <div className=\"col-7\">\r\n                    <TodoList\r\n                        todos={ todos }\r\n                        handleDeleteToDo={ handleDeleteToDo }\r\n                        handleToggle={ handleToggle }\r\n                    />\r\n                </div>\r\n                <div className=\"col-5\">\r\n                    <TodoAdd\r\n                        handleAddTodo={ handleAddTodo }\r\n                    />\r\n                </div>\r\n            </div>\r\n            <div className=\"quotesApp\">\r\n                <RealExampleRef />\r\n            </div>\r\n        </div>\r\n    )\r\n};","import React from 'react';\nimport ReactDOM from 'react-dom';\n\n// import { HookApp } from './HookApp';\n// import { CounterApp } from './components/01-useState/CounterApp';\n// import { CounterCustomHook } from './components/01-useState/CounterCustomHook';\n// import { SimpleForm } from './components/02-useEffect/SimpleForm';\n// import { FormCustomHook } from './components/02-useEffect/FormCustomHook';\n// import { MultipleCustomHooks } from './components/03-examples/MultipleCustomHooks';\n// import { FocusScreen } from './components/04-useRef/FocusScreen';\n// import { RealExampleRef } from './components/04-useRef/RealExampleRef'; // GIT desployed\n// import { LayoutEffect } from './components/05-useLayoutEffect/LayoutEffect';\n// import { Memorize } from './components/06-memos/Memorize';\n// import { MemoHook } from './components/06-memos/useMemo';\n// import { CallbackHook } from './components/06-memos/CallbackHook';\n// import { Padre } from './components/07-tarea-memo/Padre';\n// import './components/08-useReducer/intro-reducer';\nimport { TodoApp } from './components/08-useReducer/TodoApp';\n\nimport './components/08-useReducer/effects.css';\n\nReactDOM.render(\n  <TodoApp />,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}